@model  PorSaludApp.Models.Cliente

@{
    ViewBag.Title = "Crear Nuevo Cliente";
}

<div class="container mt-4">
    <h2 class="text-center mb-4">➕ Crear Nuevo Cliente</h2>

    @using (Html.BeginForm("CrearCliente", "Clientes", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Identidad, new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(model => model.Identidad, new
                    {
                        @class = "form-control",
                        required = "required",
                        placeholder = "Número de identidad",
                        maxlength = "20"
                    })
                    @Html.ValidationMessageFor(model => model.Identidad, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.NombreCompleto, new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(model => model.NombreCompleto, new
                    {
                        @class = "form-control",
                        required = "required",
                        placeholder = "Nombre completo del cliente",
                        maxlength = "100"
                    })
                    @Html.ValidationMessageFor(model => model.NombreCompleto, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Direccion, new { @class = "form-label fw-bold" })
                    @Html.TextAreaFor(model => model.Direccion, new
                    {
                        @class = "form-control",
                        rows = "3",
                        placeholder = "Dirección completa",
                        maxlength = "200"
                    })
                    @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Telefono, new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(model => model.Telefono, new
                    {
                        @class = "form-control",
                        placeholder = "Teléfono fijo",
                        maxlength = "20"
                    })
                    @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Celular, new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(model => model.Celular, new
                    {
                        @class = "form-control",
                        placeholder = "Número celular",
                        maxlength = "20"
                    })
                    @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Correo, new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(model => model.Correo, new
                    {
                        @class = "form-control",
                        type = "email",
                        placeholder = "correo@ejemplo.com",
                        maxlength = "100"
                    })
                    @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Sexo, new { @class = "form-label fw-bold" })
                    @Html.DropDownListFor(model => model.Sexo, new SelectList(new[] {
                        new SelectListItem { Text = "Masculino", Value = "M" },
                        new SelectListItem { Text = "Femenino", Value = "F" },
                        new SelectListItem { Text = "Otro", Value = "O" }
                    }, "Value", "Text"), "Seleccionar sexo...", new
                        {
                            @class = "form-select",
                        required = "required"
                    })
                    @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
                </div>

                <div class="form-group form-check mb-3">
                    @Html.CheckBoxFor(model => model.Estado, new { @class = "form-check-input", @checked = "checked" })
                    @Html.LabelFor(model => model.Estado, "Cliente Activo", new { @class = "form-check-label fw-bold" })
                </div>
            </div>
        </div>

        <div class="form-group mt-4">
            <button type="submit" class="btn btn-primary btn-lg">💾 Guardar Cliente</button>
            @Html.ActionLink("❌ Cancelar", "Index", null, new { @class = "btn btn-secondary btn-lg" })
        </div>
    }
</div>

@section Scripts {
    <script>
        // Validación del formulario
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.querySelector('.needs-validation');

            form.addEventListener('submit', function (e) {
                if (!form.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                form.classList.add('was-validated');
            });
        });
    </script>
}